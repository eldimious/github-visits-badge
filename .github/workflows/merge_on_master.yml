name: '[github-visits-badge] Actions when merge to Main Branch'

on:
  push:
    branches: [ main ]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 17.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies server
      run: | # run multiple commands
        npm ci
    - name: Run tests server
      run: npm run test
      env:
        APP_ENV: test
        POSTGRES_USER: ${{ secrets.POSTGRES_USER_TEST }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_TEST }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST_TEST }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT_TEST }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB_TEST }}
        GITHUB_ID: ${{ secrets.GITHUB_ID_TEST }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_TEST }}
        HTTP_PORT: 8080
  publish-image:
    needs: [run_tests]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: github-visits-badge
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      working-directory: ./src